{"version":3,"sources":["utils/setAuthToken.js","actions/authActions.js","actions/types.js","reducers/authReducers.js","reducers/errorReducer.js","reducers/index.js","store.js","components/patientauth/register.jsx","components/patientauth/login.jsx","components/patientauth/verify.jsx","components/doctorauth/register.jsx","components/doctorauth/login.jsx","components/doctorauth/verify.jsx","components/navbar/navbar.jsx","components/navbar/navbar2.jsx","components/privateroutes/PrivateNavbar.jsx","components/landing/map.jsx","App.js","serviceWorker.js","index.js"],"names":["setAuthToken","token","axios","defaults","headers","common","setCurrentUser","decoded","type","payload","logoutUser","dispatch","localStorage","removeItem","isEmpty","require","initialState","isAuthenticated","user","loading","combineReducers","auth","state","action","errors","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","RegisterPatient","onChange","e","setState","target","id","value","console","log","onSubmit","preventDefault","newUser","name","email","password","password2","phone","props","registerPatient","history","this","push","nextProps","class","Box","width","height","item","xs","sm","md","component","Paper","elevation","className","style","margin","noValidate","error","classnames","invalid","htmlFor","paddingLeft","borderRadius","letterSpacing","marginTop","to","Component","connect","userData","post","then","res","catch","err","response","data","withRouter","PatientLogin","loginPatient","emailnotfound","passwordincorrect","setItem","jwt_decode","PatientVerify","otp","verifyPatient","RegisterDoctor","address","reg_num","hospital_name","specialization","mon","tues","wed","thrus","fri","sat","sun","registerDoctor","DoctorLogin","loginDoctor","DoctorVerify","verifyDoctor","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","Navbar","classes","AppBar","position","backgroundColor","align","Toolbar","Typography","variant","textAlign","fontFamily","Button","color","fontSize","Navbar2","onLogoutClick","marginLeft","onClick","rest","render","map","total","statewise","get","overflowX","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","key","textDecoration","confirmed","cChanges","active","aChanges","recovered","rChanges","deaths","dChanges","marginBottom","jwtToken","currentTime","Date","now","exp","location","href","App","PrivateNavbar","exact","path","Map","PatientRegister","DoctorRegister","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d5b8f347.chunk.js","sourcesContent":["import axios from \"axios\";\nconst setAuthToken = token => {\n  if (token) {\n    axios.defaults.headers.common[\"Authorization\"] = token;\n  } else {\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\nexport default setAuthToken;\n","import axios from \"axios\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\n\nimport { GET_ERRORS, SET_CURRENT_USER, USER_LOADING } from \"./types\";\n\nexport const registerPatient = (userData, history) => dispatch => {\n  axios\n    .post(\"/patient/register\", userData)\n    .then(res => history.push(\"/patient/verify\"))\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\nexport const verifyPatient = (userData, history) => dispatch => {\n  axios\n    .post(\"/patient/verify\", userData)\n    .then(res => history.push(\"/patient/login\"))\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\nexport const loginPatient = userData => dispatch => {\n  axios\n    .post(\"/patient/login\", userData)\n    .then(res => {\n      const { token } = res.data;\n      localStorage.setItem(\"jwtToken\", token);\n      // Set token to Auth header\n      setAuthToken(token);\n      // Decode token to get user data\n      const decoded = jwt_decode(token);\n      // Set current user\n      dispatch(setCurrentUser(decoded));\n    })\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n\nexport const registerDoctor = (userData, history) => dispatch => {\n  axios\n    .post(\"/doctor/register\", userData)\n    .then(res => history.push(\"/doctor/verify\"))\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\nexport const verifyDoctor = (userData, history) => dispatch => {\n  axios\n    .post(\"/doctor/verify\", userData)\n    .then(res => history.push(\"/doctor/login\"))\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\nexport const loginDoctor = userData => dispatch => {\n  axios\n    .post(\"/doctor/login\", userData)\n    .then(res => {\n      const { token } = res.data;\n      localStorage.setItem(\"jwtToken\", token);\n      // Set token to Auth header\n      setAuthToken(token);\n      // Decode token to get user data\n      const decoded = jwt_decode(token);\n      // Set current user\n      dispatch(setCurrentUser(decoded));\n    })\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n\n\n\n\n\n\n\n// Set logged in user\nexport const setCurrentUser = decoded => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  };\n};\n\n\nexport const setUserLoading = () => {\n  return {\n    type: USER_LOADING\n  };\n};\n\nexport const logoutUser = () => dispatch => {\n  localStorage.removeItem(\"jwtToken\");\n  setAuthToken(false);\n  dispatch(setCurrentUser({}));\n};\n","export const GET_ERRORS = \"GET_ERRORS\";\nexport const USER_LOADING = \"USER_LOADING\";\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\n","import { SET_CURRENT_USER, USER_LOADING  } from \"../actions/types\";\n\nconst isEmpty = require(\"is-empty\");\n\nconst initialState = {\n  isAuthenticated: false,\n  user: {},\n  loading: false\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        isAuthenticated: !isEmpty(action.payload),\n        user: action.payload\n      };\n    case USER_LOADING:\n      return {\n        ...state,\n        loading: true\n      };\n    default:\n      return state;\n  }\n}","import { GET_ERRORS } from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport authReducer from \"./authReducers\";\nimport errorReducer from \"./errorReducer\";\n\nexport default combineReducers({\n  auth: authReducer,\n  errors: errorReducer\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middleware),\n    (window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\n      window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__()) ||\n      compose\n  )\n);\n\nexport default store;\n","import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { registerPatient } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\n\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\n\n\n\nclass RegisterPatient extends Component {\n  constructor() {\n    super();\n    this.state = {\n     name: \"\",\n     email: \"\",\n     password: \"\",\n     password2: \"\",\n     phone: \"\",\n     errors: {}\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/patient/dashboard\");\n    }\n  }\n  \n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n    console.log(this.state);\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    const newUser = {\n      name: this.state.name,\n      email: this.state.email,\n      password: this.state.password,\n      password2: this.state.password2,\n      phone: this.state.phone\n    };\n    console.log(newUser);\n    this.props.registerPatient(newUser, this.props.history);\n  };\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div>\n        <br></br>\n        \n      <div class=\"container\">\n          <div class=\"row\">\n          <div class=\"col-md-6 col-sm-12 my\">\n              </div>\n              <div class=\"col-md-6 col-sm-12\">\n              <Box width =\"100%\" height=\"100%\"  item xs={12} sm={8} md={5} component={Paper} elevation={6} className=\"card\" >\n                <div class=\"conainer\">\n              <div >\n              <h4 style={{ margin: \"50px 50px \"  }}>\n              <b>Patient Sign In</b>\n              </h4>\n              </div>\n                <form noValidate onSubmit={this.onSubmit} style={{ margin: \"40px 40px\"  }}>\n                  <div className=\"input-field col s12\">\n                  <input\n                  onChange={this.onChange}\n                  value={this.state.name}\n                  error={errors.name}\n                  id=\"name\"\n                  type=\"text\"\n                  className={classnames(\"\", {\n                    invalid: errors.name\n                  })}\n                />\n                <label htmlFor=\"name\">Name</label>\n                <span className=\"red-text\">{errors.name}</span>\n                  </div>\n\n                  <div className=\"input-field col s12\">\n                  <input\n                  onChange={this.onChange}\n                  value={this.state.email}\n                  error={errors.email}\n                  id=\"email\"\n                  type=\"email\"\n                  className={classnames(\"\", {\n                    invalid: errors.email\n                  })}\n                />\n                <label htmlFor=\"email\">Email</label>\n                <span className=\"red-text\">{errors.email}</span>\n                </div>\n\n                \n                <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.phone}\n                  error={errors.phone}\n                  id=\"phone\"\n                  type=\"text\"\n                  className={classnames(\"\", {\n                    invalid: errors.phone\n                  })}\n                />\n                <label htmlFor=\"phone\">Phone</label>\n                <span className=\"red-text\">{errors.phone}</span>\n                  </div>\n\n\n                <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.password}\n                  error={errors.password}\n                  id=\"password\"\n                  type=\"password\"\n                  className={classnames(\"\", {\n                    invalid: errors.password\n                  })}\n                />\n                <label htmlFor=\"password\">Password</label>\n                <span className=\"red-text\">{errors.password}</span>\n                </div>\n\n                <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.password2}\n                  error={errors.password2}\n                  id=\"password2\"\n                  type=\"password\"\n                  className={classnames(\"\", {\n                    invalid: errors.password2\n                  })}\n                />\n                <label htmlFor=\"password2\">Confirm Password</label>\n                <span className=\"red-text\">{errors.password2}</span>\n              </div>\n\n\n                <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                  <button\n                    style={{\n                      width: \"150px\",\n                      borderRadius: \"3px\",\n                      letterSpacing: \"1.5px\",\n                      marginTop: \"1rem\"\n                    }}\n                    type=\"submit\"\n                    className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n                  >\n                    Sign In\n                  </button>\n                  <p className=\"grey-text text-darken-1 mt-2 mb-2\">\n                  Already have an account? <Link to=\"/patient/login\">Log in</Link>\n                </p>\n                </div>\n\n              </form>\n              </div>\n          \n              </Box>\n              </div>\n              \n            </div>\n      </div>   \n      </div>\n\n    );\n  }\n}\n\nRegisterPatient.propTypes = {\n  registerPatient: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { registerPatient }\n)(withRouter(RegisterPatient));","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { loginPatient } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\n\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\n\nclass PatientLogin extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: \"\",\n      password: \"\",\n      errors: {}\n    };\n  }\n\n  componentDidMount() {\n    // If logged in and user navigates to Login page, should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/patient/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.auth.isAuthenticated) {\n      this.props.history.push(\"/patient/dashboard\");\n    }\n\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    const userData = {\n      email: this.state.email,\n      password: this.state.password\n    };\n\n    this.props.loginPatient(userData);\n  };\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div className=\"container\">\n        <div style={{ marginTop: \"4rem\" }} className=\"row\">\n        <div className=\"col-lg-6 offset-s2 \">\n          </div>\n          <div className=\"col-lg-5 offset-s2\">\n          <Box width =\"100%\" height=\"100%\"   item xs={12} sm={8} md={5} component={Paper} elevation={6} className=\"card\" >\n            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n            <br/> \n              <br/> \n              <h4>\n                <b>Log In</b>\n              </h4>\n              <p className=\"grey-text text-darken-1\">\n                Don't have an account? <Link to=\"/patient/register\">Register</Link>\n              </p>\n            </div>\n            <form noValidate onSubmit={this.onSubmit}>\n            <br/> \n            <br/> \n            <br/> \n            <br/> \n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.email}\n                  error={errors.email}\n                  id=\"email\"\n                  type=\"email\"\n                  className={classnames(\"\", {\n                    invalid: errors.email || errors.emailnotfound\n                  })}\n                />\n                <label htmlFor=\"email\">Email</label>\n                <span className=\"red-text\">\n                  {errors.email}\n                  {errors.emailnotfound}\n                </span>\n              </div>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.password}\n                  error={errors.password}\n                  id=\"password\"\n                  type=\"password\"\n                  className={classnames(\"\", {\n                    invalid: errors.password || errors.passwordincorrect\n                  })}\n                />\n                <label htmlFor=\"password\">Password</label>\n                <span className=\"red-text\">\n                  {errors.password}\n                  {errors.passwordincorrect}\n                </span>\n              </div>\n              <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                <button\n                  style={{\n                    width: \"150px\",\n                    borderRadius: \"3px\",\n                    letterSpacing: \"1.5px\",\n                    marginTop: \"1rem\"\n                  }}\n                  type=\"submit\"\n                  className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n                >\n                  Login\n                </button>\n                <br/> \n            <br/> \n              </div>\n            </form>\n            </Box>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nPatientLogin.propTypes = {\n  loginPatient: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { loginPatient }\n)(PatientLogin);\n","import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { verifyPatient } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\n\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\n\nclass PatientVerify extends Component {\n  constructor() {\n    super();\n    this.state = {\n      otp: \"\",\n      email: \"\",\n      errors: {}\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/patient/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    const newUser = {\n      otp: this.state.otp,\n      email: this.state.email,\n    };\n\n    this.props.verifyPatient(newUser, this.props.history);\n  };\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n        <div className=\"col-lg-6 offset-s2\">\n          </div>\n          <div className=\"col-lg-5 offset-s2 mt -4\">\n          <Box width =\"100%\" height=\"100%\"   item xs={12} sm={8} md={5} component={Paper} elevation={6} className=\"card\" >\n\n            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n            <br/ >\n              <h4>\n                <b>Verify </b> \n              </h4>\n              <br/ >\n              <p className=\"grey-text text-darken-1\">\n                Already Verfied? <Link to=\"/login\">Log in</Link>\n              </p>\n              <p className=\"grey-text text-darken-1\">\n                Don't have an account? <Link to=\"/register\">Register</Link>\n              </p>\n            </div>\n            <form noValidate onSubmit={this.onSubmit}>\n            <br/ >\n            <br/ >\n            <br/ >\n            <br/ >\n            <br/ >\n            <br/ >\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.email}\n                  error={errors.email}\n                  id=\"email\"\n                  type=\"email\"\n                  className={classnames(\"\", {\n                    invalid: errors.email\n                  })}\n                />\n                <label htmlFor=\"email\">Email</label>\n                <span className=\"red-text\">{errors.email}</span>\n              </div>\n              \n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.otp}\n                  error={errors.otp}\n                  id=\"otp\"\n                  type=\"text\"\n                  className={classnames(\"\", {\n                    invalid: errors.otp\n                  })}\n                />\n                <label htmlFor=\"otp\">Enter OTP</label>\n                <span className=\"red-text\">{errors.otp}</span>\n              </div>\n              \n              <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                <button\n                  style={{\n                    width: \"150px\",\n                    borderRadius: \"3px\",\n                    letterSpacing: \"1.5px\",\n                    marginTop: \"1rem\"\n                  }}\n                  type=\"submit\"\n                  className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n                >\n                  Verify\n                </button>\n                <br/ >\n                <br/ >\n                <br/ >\n              </div>\n            </form>\n            </Box>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nPatientVerify.propTypes = {\n  verifyPatient: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { verifyPatient }\n)(withRouter(PatientVerify));\n","import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { registerDoctor } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\n\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\n\n\n\nclass RegisterDoctor extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name:\"\",\n      email: \"\",\n      address:\"\",\n      reg_num:\"\",\n      phone:\"\",\n      specialization: \"\",\n      password: \"\",\n      password2: \"\",\n      errors: {},\n      hospital_name: \"\",\n      mon: [],\n      tues: [],\n      wed: [],\n      thrus: [],\n      fri: [],\n      sat: [],\n      sun: [],\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.auth.isAuthenticated ) {\n      this.props.history.push(\"/doctor/dashboard\");\n    }\n  }\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n    console.log(this.state);\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    const newUser = {\n      name: this.state.name,\n      email: this.state.email,\n      address:this.state.address,\n      phone:this.state.phone,\n      reg_num: this.state.reg_num,\n      hospital_name: this.state.hospital_name,\n      specialization:this.state.specialization,\n      password: this.state.password,\n      password2: this.state.password2,\n      mon: this.state.mon,\n      tues: this.state.tues,\n      wed: this.state.wed,\n      thrus: this.state.thrus,\n      fri: this.state.fri,\n      sat: this.state.sat,\n      sun: this.state.sun,\n    };\n    console.log(newUser);\n    this.props.registerDoctor(newUser, this.props.history);\n  };\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div >\n        <div class=\"container\">\n          <div class=\"row\">\n          <div class=\"col-md-6 col-sm-12\">  \n          </div>\n            <div class=\"col-md-6 col-sm-12\">  \n              <Box width =\"100%\" height=\"100%\"  item xs={12} sm={8} md={5} component={Paper} elevation={6} className=\"card\" >\n                <div class=\"conainer\">\n                <div >\n                <h4 style={{ margin: \"50px 50px \"  }}>\n              <b>Register as Doctor</b>\n              </h4>\n              </div>\n                <form noValidate onSubmit={this.onSubmit} style={{ margin: \"40px 40px\"  }}>\n                 \n                <div className=\"input-field col s12\">\n                <input\n                onChange={this.onChange}\n                value={this.state.name}\n                error={errors.name}\n                id=\"name\"\n                type=\"text\"\n                className={classnames(\"\", {\n                  invalid: errors.name\n                })}\n              />\n              <label htmlFor=\"name\">Name</label>\n              <span className=\"red-text\">{errors.name}</span>\n                </div>\n\n                  <div className=\"input-field col s12\">\n                  <input\n                  onChange={this.onChange}\n                  value={this.state.email}\n                  error={errors.email}\n                  id=\"email\"\n                  type=\"email\"\n                  className={classnames(\"\", {\n                    invalid: errors.email\n                  })}\n                />\n                <label htmlFor=\"email\">Email</label>\n                <span className=\"red-text\">{errors.email}</span>\n                </div>\n\n                <div className=\"input-field col s12\">\n                  <input\n                  onChange={this.onChange}\n                  value={this.state.address}\n                  error={errors.address}\n                  id=\"address\"\n                  type=\"text\"\n                  className={classnames(\"\", {\n                    invalid: errors.address\n                  })}\n                />\n                <label htmlFor=\"adress\">Address</label>\n                <span className=\"red-text\">{errors.address}</span>\n                </div>\n\n                \n\n                <div className=\"input-field col s12\">\n                  <input\n                  onChange={this.onChange}\n                  value={this.state.reg_num}\n                  error={errors.reg_num}\n                  id=\"reg_num\"\n                  type=\"text\"\n                  className={classnames(\"\", {\n                    invalid: errors.reg_num\n                  })}\n                />\n                <label htmlFor=\"reg_num\">Registration Number</label>\n                <span className=\"red-text\">{errors.reg_num}</span>\n                </div>\n\n\n                <div className=\"input-field col s12\">\n                  <input\n                  onChange={this.onChange}\n                  value={this.state.hospital_name}\n                  error={errors.hospital_name}\n                  id=\"hospital_name\"\n                  type=\"text\"\n                  className={classnames(\"\", {\n                    invalid: errors.hospital_name\n                  })}\n                />\n                <label htmlFor=\"hospital_name\">Hospital Name</label>\n                <span className=\"red-text\">{errors.hospital_name}</span>\n                </div>\n\n\n\n                \n                <div className=\"input-field col s12\">\n                  <input\n                  onChange={this.onChange}\n                  value={this.state.specialization}\n                  error={errors.specialization}\n                  id=\"specialization\"\n                  type=\"text\"\n                  className={classnames(\"\", {\n                    invalid: errors.specialization\n                  })}\n                />\n                <label htmlFor=\"specialization\">specialization</label>\n                <span className=\"red-text\">{errors.specialization}</span>\n                </div>\n\n\n                \n\n                <div className=\"input-field col s12\">\n                  <input\n                  onChange={this.onChange}\n                  value={this.state.phone}\n                  error={errors.phone}\n                  id=\"phone\"\n                  type=\"text\"\n                  className={classnames(\"\", {\n                    invalid: errors.phone\n                  })}\n                />\n                <label htmlFor=\"phone\">Contact Number</label>\n                <span className=\"red-text\">{errors.phone}</span>\n                </div>\n\n\n\n                <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.password}\n                  error={errors.password}\n                  id=\"password\"\n                  type=\"password\"\n                  className={classnames(\"\", {\n                    invalid: errors.password\n                  })}\n                />\n                <label htmlFor=\"password\">Password</label>\n                <span className=\"red-text\">{errors.password}</span>\n                </div>\n\n                <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.password2}\n                  error={errors.password2}\n                  id=\"password2\"\n                  type=\"password\"\n                  className={classnames(\"\", {\n                    invalid: errors.password2\n                  })}\n                />\n                <label htmlFor=\"password2\">Confirm Password</label>\n                <span className=\"red-text\">{errors.password2}</span>\n              </div>\n\n\n                <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                  <button\n                    style={{\n                      width: \"150px\",\n                      borderRadius: \"3px\",\n                      letterSpacing: \"1.5px\",\n                      marginTop: \"1rem\"\n                    }}\n                    type=\"submit\"\n                    className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n                  >\n                  Register\n                  </button>\n                  <p className=\"grey-text text-darken-1 mt-2 mb-2\">\n                  Already have an account? <Link to=\"/doctor/login\"> Login</Link>\n                </p>\n                </div>\n\n              </form>\n              </div>\n          \n              </Box>\n              </div>\n              \n            </div>\n      </div>   \n      </div>\n\n\n    );\n  }\n}\n\nRegisterDoctor.propTypes = {\n  registerDoctor: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { registerDoctor }\n)(withRouter(RegisterDoctor));","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { loginDoctor } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\n\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\n\nclass DoctorLogin extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: \"\",\n      password: \"\",\n      errors: {}\n    };\n  }\n\n  componentDidMount() {\n    // If logged in and user navigates to Login page, should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/doctor/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.auth.isAuthenticated) {\n      this.props.history.push(\"/doctor/dashboard\");\n    }\n\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    const userData = {\n      email: this.state.email,\n      password: this.state.password\n    };\n\n    this.props.loginDoctor(userData);\n  };\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n\n      <div className=\"container\">\n        <div style={{ marginTop: \"4rem\" }} className=\"row\">\n        <div className=\"col-lg-6 offset-s2 \">\n          </div>\n          <div className=\"col-lg-5 offset-s2 \">\n          <Box width =\"100%\" height=\"100%\"   item xs={12} sm={8} md={5} component={Paper} elevation={6} className=\"card\" >\n            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n              <br/> \n              <br/> \n              <h4>\n                <b>Log In</b>\n              </h4>\n              <p className=\"grey-text text-darken-1 mb-3 mt-3\">\n                Don't have an account? <Link to=\"/doctor/register\">Register</Link>\n              </p>\n              \n            </div>\n            <br/>\n             \n\n            <form noValidate onSubmit={this.onSubmit}>\n            <br/> \n            <br/> \n            <br/> \n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.email}\n                  error={errors.email}\n                  id=\"email\"\n                  type=\"email\"\n                  className={classnames(\"\", {\n                    invalid: errors.email || errors.emailnotfound\n                  })}\n                />\n                <label htmlFor=\"email\">Email</label>\n                <span className=\"red-text\">\n                  {errors.email}\n                  {errors.emailnotfound}\n                </span>\n              </div>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.password}\n                  error={errors.password}\n                  id=\"password\"\n                  type=\"password\"\n                  className={classnames(\"\", {\n                    invalid: errors.password || errors.passwordincorrect\n                  })}\n                />\n                <label htmlFor=\"password\">Password</label>\n                <span className=\"red-text\">\n                  {errors.password}\n                  {errors.passwordincorrect}\n                </span>\n              </div>\n              <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                <button\n                  style={{\n                    width: \"150px\",\n                    borderRadius: \"3px\",\n                    letterSpacing: \"1.5px\",\n                    marginTop: \"1rem\"\n                  }}\n                  type=\"submit\"\n                  className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n                >\n                  Login\n                </button>\n                <br/> \n                <br/> \n              </div>\n            </form>\n            </Box>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nDoctorLogin.propTypes = {\n  loginDoctor: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { loginDoctor }\n)(DoctorLogin);\n","import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { verifyDoctor } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\n\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\n\nclass DoctorVerify extends Component {\n  constructor() {\n    super();\n    this.state = {\n      otp: \"\",\n      email: \"\",\n      errors: {}\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/doctor/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    const newUser = {\n      otp: this.state.otp,\n      email: this.state.email,\n    };\n\n    this.props.verifyDoctor(newUser, this.props.history);\n  };\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n        <div className=\"col-lg-6 offset-s2\">\n          </div>\n          <div className=\"col-lg-5 offset-s2 mt -4\">\n          <Box width =\"100%\" height=\"100%\"   item xs={12} sm={8} md={5} component={Paper} elevation={6} className=\"card\" >\n            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n              <br/ >\n              \n              <h4>\n                <b>Verify </b> \n              </h4>\n              <br/ >\n              \n              <p className=\"grey-text text-darken-1\">\n                Already Verfied? <Link to=\"/doctor/login\">Log in</Link>\n              </p>\n              <p className=\"grey-text text-darken-1\">\n                Don't have an account? <Link to=\"/doctor/register\">Register</Link>\n              </p>\n            </div>\n            <form  noValidate onSubmit={this.onSubmit}>\n            <br/ >\n              <br/ >\n              <br/ >\n              <br/ >\n              <br/ >\n              <br/ >\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.email}\n                  error={errors.email}\n                  id=\"email\"\n                  type=\"email\"\n                  className={classnames(\"\", {\n                    invalid: errors.email\n                  })}\n                />\n                <label htmlFor=\"email\">Email</label>\n                <span className=\"red-text\">{errors.email}</span>\n              </div>\n              \n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.otp}\n                  error={errors.otp}\n                  id=\"otp\"\n                  type=\"text\"\n                  className={classnames(\"\", {\n                    invalid: errors.otp\n                  })}\n                />\n                <label htmlFor=\"otp\">Enter OTP</label>\n                <span className=\"red-text\">{errors.otp}</span>\n              </div>\n              \n              <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                <button\n                  style={{\n                    width: \"150px\",\n                    borderRadius: \"3px\",\n                    letterSpacing: \"1.5px\",\n                    marginTop: \"1rem\"\n                  }}\n                  type=\"submit\"\n                  className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n                >\n                  Verify\n                </button>\n                <br/ >\n              <br/ >\n              <br/ >\n              </div>\n            </form>\n            </Box>\n          </div>\n          \n        </div>\n      </div>\n    );\n  }\n}\n\nDoctorVerify.propTypes = {\n  verifyDoctor: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { verifyDoctor }\n)(withRouter(DoctorVerify));","import React from 'react';\nimport {Link} from \"react-router-dom\"; \nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nfunction Navbar() {\n  const classes = useStyles();\n  return (\n    <div className={classes.root} >\n       <AppBar position=\"static\" style={{backgroundColor:\"white\",width:\"100%\", align:\"left\"}}>\n        <Toolbar>\n            <Typography variant=\"h6\" className={classes.title} style={{textAlign:\"left\", fontFamily:'Roboto'}}>\n            <Link to =  '/'>\n            <Button style={{color:\"green\" , fontFamily:'Roboto', fontSize: \"20px\"}}> <b>  E Cure </b>  </Button>\n            </Link>\n          </Typography>\n          \n          <Link to =  '/patient/register'>\n          <Button style={{color:\"black\"}}>Patient Register</Button>\n          </Link>\n          <Link to =  '/patient/login'>\n          <Button style={{color:\"black\"}}> Patient Login </Button>\n          </Link>\n          <Link to =  '/doctor/register'>\n          <Button style={{color:\"black\"}}>Doctor Register</Button>\n          </Link>\n          <Link to =  '/doctor/login'>\n          <Button style={{color:\"black\"}}>Doctor Login </Button>\n          </Link>\n          \n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nexport default Navbar;","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../actions/authActions\";\nimport {Link} from \"react-router-dom\"; \nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nclass Navbar2 extends Component {\n  onLogoutClick = e => {\n    e.preventDefault();\n    this.props.logoutUser();\n    this.props.history.push(\"/\");\n  };\n\n  render() {\n    const { user } = this.props.auth;\n\n    return (\n\n      <div  >\n       <AppBar position=\"fixed\" style={{backgroundColor:\"white\" , width:\"100%\", align:\"left\"}}>\n        <Toolbar>\n        <Link to =  '/'>\n            <Typography variant=\"h6\"  style={{textAlign:\"left\", color: \"green\" , fontFamily:'Roboto'}}>\n              E Cure\n          </Typography>\n          </Link>\n          <Typography variant=\"h6\"  style={{marginLeft: \"auto\", color : \"black\" , fontFamily:'Roboto'}}>\n            Hey {user.name}  \n          </Typography>\n          \n          <button\n              style={{\n                width: \"150px\",\n                borderRadius: \"3px\",\n                letterSpacing: \"1.5px\",\n                marginRight: \"1rem\",\n                marginLeft: \"1rem\",\n                color: 'black'\n              }}\n              onClick={this.onLogoutClick}\n              class=\"btn btn-outline-secondary\">\n              Logout\n            </button>\n            </Toolbar>\n      </AppBar>\n      </div>\n    );\n  }\n}\n\nNavbar2.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(\n  mapStateToProps,\n  { logoutUser }\n)(Navbar2);\n","import React from \"react\";\nimport { Route} from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport Navbar2 from \"../navbar/navbar2\"\n\nconst PrivateRoute = ({ component: Component,auth, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      auth.isAuthenticated === true ? (\n        <Navbar2 {...props} />\n      ) : (\n        <Component {...props} />\n      )\n    }\n  />\n);\n\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React , {Component} from 'react';\nimport axios from 'axios';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n \nclass map extends Component {\n  constructor (props) {\n    super(props);\n    this.state = { \n        total: {},\n        statewise: []\n     };\n   }\n    componentDidMount(){\n        axios.get('https://api.covidindiatracker.com/state_data.json')\n        .then(res=> this.setState({statewise: res.data}));\n        axios.get('https://api.covidindiatracker.com/total.json')\n        .then(res=> this.setState({total: res.data}));\n    }\n\n  render () {\n\n    return (\n      <div class=\"row mx-auto\">\n         \n         <div class=\"col-lg-5 container col-sm-12 col-md-12 mx-auto\" style={{overflowX: \"auto\"}}>\n         <TableContainer>\n            <Table style={{fontFamily: \"Lato sans-serif\"}}>\n                <colgroup>\n                    <col width=\"30%\" />\n                    <col width=\"15%\" />\n                    <col width=\"15%\" />\n                    <col width=\"15%\" />\n                    <col width=\"15%\" />\n                </colgroup>\n                <TableHead>\n                    <TableRow style={{ height: \"10px\"}}>\n                        <TableCell style={{color: \"black\"}}> <b> State </b></TableCell>\n                        <TableCell   style={{color: \"red\"}} > <b>Confirmed </b> </TableCell>\n                        <TableCell style={{color: \"blue\"}}> <b> Existing</b> </TableCell>\n                        <TableCell  style={{color: \"green\"}} > <b>Recovered</b> </TableCell>\n                        <TableCell style={{color: \"grey\"}}> <b> Deaths </b> </TableCell>\n                    </TableRow>\n                </TableHead>\n                    <TableBody>\n                        {this.state.statewise.map((data) => (\n                            <TableRow key={data.name} style={{ height: \"10px\"}}>\n                            <TableCell  style={{color: \"black\" , textDecoration: \"bold\"}}>  {data.state} </TableCell>\n                        <TableCell  style={{color: \"red\"}}> {data.confirmed} <br/>  <b><i> {data.cChanges>=0 ?<span>+</span>: null}{data.cChanges}</i></b></TableCell>\n                            <TableCell style={{color: \"blue\"}} >  {data.active} <br/>  <b><i>   {data.aChanges>=0 ?<span>+</span>: null}{data.aChanges}</i></b> </TableCell>\n                            <TableCell  style={{color: \"green\"}}>  {data.recovered}  <br/>  <b><i>  {data.rChanges>=0 ?<span>+</span>: null}{data.rChanges}</i></b> </TableCell>\n                            <TableCell style={{color: \"grey\"}} >  {data.deaths}  <br/>  <b><i>  {data.dChanges>=0 ?<span>+</span>: null}{data.dChanges}</i></b> </TableCell>\n                            </TableRow>\n                        ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n         </div>\n         <div class=\"col-lg-5 container center mx-auto\">\n             <h1 style={{marginTop: \"50px\", fontFamily: \"roboto\"}} class=\"text-center\"> COVID Tracker</h1>  \n             <h2 style={{ fontFamily: \"roboto\"}}> India </h2> \n             <div class=\"card\" style={{margin: \"30px 50px\" }} >\n                    <h4 style={{ fontFamily: \"roboto\", marginTop:\"20px\" }}> Confirmed </h4>\n                    <h3 style={{color: \"red\" , fontFamily:\"roboto\"}}>\n                        {this.state.total.confirmed}\n                    </h3>\n                    <h6 style={{color: \"red\" , marginBottom:\"20px\" , fontFamily:\"roboto\"}}> <b>+{this.state.total.cChanges} </b>  </h6>\n             </div>\n             <div class=\"card\" style={{margin: \"30px 50px\"}}>\n             <h4 style={{ fontFamily: \"roboto\", marginTop:\"20px\" }}> Active </h4>\n             <h3 style={{color: \"blue\" , fontFamily:\"roboto\"}}>\n                        {this.state.total.active}\n                    </h3>\n                    <h6 style={{color: \"blue\" , marginBottom:\"20px\" , fontFamily:\"roboto\"}}> <b>+{this.state.total.aChanges} </b>  </h6>\n             </div>\n             <div class=\"card\" style={{margin: \"30px 50px\"}}>\n             <h4 style={{ fontFamily: \"roboto\", marginTop:\"20px\" }}> Recovered </h4>\n             <h3 style={{color: \"green\" ,  fontFamily:\"roboto\" }}>\n                        {this.state.total.recovered}\n                    </h3>\n                    <h6 style={{color: \"green\" , marginBottom:\"20px\" , fontFamily:\"roboto\"}}> <b>+{this.state.total.rChanges} </b> </h6>\n             </div>\n             <div class=\"card\" style={{margin: \"30px 50px\"}}>\n             <h4 style={{ fontFamily: \"roboto\", marginTop:\"20px\" }}> Deaths </h4>\n             <h3 style={{color: \"darkgrey\" ,  fontFamily:\"roboto\"}}>\n                        {this.state.total.deaths}\n                    </h3>\n                    <h6 style={{color: \"darkgrey\" , marginBottom:\"20px\" , fontFamily:\"roboto\"}}><b>+{this.state.total.dChanges} </b> </h6>\n             </div>\n         </div>\n         \n      </div>\n    );\n  }\n}\n\nexport default map;","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"./utils/setAuthToken\";\n\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nimport PatientRegister from \"./components/patientauth/register\";\nimport PatientLogin from \"./components/patientauth/login\";\nimport PatientVerify from './components/patientauth/verify';\n\nimport DoctorRegister from \"./components/doctorauth/register\";\nimport DoctorLogin from \"./components/doctorauth/login\";\nimport DoctorVerify from './components/doctorauth/verify';\n\nimport Navbar from './components/navbar/navbar';\nimport PrivateNavbar from './components/privateroutes/PrivateNavbar'\n\nimport Map from './components/landing/map';\n\n\nif (localStorage.jwtToken) {\n\n  const token = localStorage.jwtToken;\n  setAuthToken(token);\n\n  const decoded = jwt_decode(token);\n\n  store.dispatch(setCurrentUser(decoded));\n\n  const currentTime = Date.now() / 1000; \n  if (decoded.exp < currentTime) {\n    store.dispatch(logoutUser());\n    window.location.href = \"./\";\n  }\n}\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\"> \n          <Switch>\n              <PrivateNavbar  component={Navbar} />\n            </Switch>  \n            <Route exact path=\"/\" component={Map} />\n            <Route exact path=\"/patient/register\" component={PatientRegister} />\n            <Route exact path=\"/patient/verify\" component={PatientVerify} />\n            <Route exact path=\"/patient/login\" component={PatientLogin} />\n            <Route exact path=\"/doctor/register\" component={DoctorRegister} />\n            <Route exact path=\"/doctor/verify\" component={DoctorVerify} />\n            <Route exact path=\"/doctor/login\" component={DoctorLogin} />\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}