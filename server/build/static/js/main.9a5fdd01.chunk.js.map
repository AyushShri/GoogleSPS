{"version":3,"sources":["utils/setAuthToken.js","actions/authActions.js","actions/types.js","reducers/authReducers.js","reducers/errorReducer.js","reducers/index.js","store.js","components/patientauth/register.jsx","components/patientauth/login.jsx","components/patientauth/verify.jsx","components/patientdashboard/Dashboard.js","components/patientdashboard/GetAppointment.js","components/doctorauth/register.jsx","components/doctorauth/login.jsx","components/doctorauth/verify.jsx","components/navbar/navbar.jsx","components/navbar/navbar2.jsx","components/privateroutes/PrivateNavbar.jsx","components/landing/map.jsx","App.js","serviceWorker.js","index.js"],"names":["setAuthToken","token","axios","defaults","headers","common","setCurrentUser","decoded","type","payload","logoutUser","dispatch","localStorage","removeItem","isEmpty","require","initialState","isAuthenticated","user","loading","combineReducers","auth","state","action","errors","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","RegisterPatient","onChange","e","setState","target","id","value","console","log","onSubmit","preventDefault","newUser","name","email","password","password2","phone","props","registerPatient","history","this","push","nextProps","class","Box","width","height","item","xs","sm","md","component","Paper","elevation","className","style","margin","noValidate","error","classnames","invalid","htmlFor","paddingLeft","borderRadius","letterSpacing","marginTop","to","Component","connect","userData","post","then","res","catch","err","response","data","withRouter","PatientLogin","loginPatient","emailnotfound","passwordincorrect","setItem","jwt_decode","PatientVerify","otp","verifyPatient","useStyles","makeStyles","theme","root","main","whiteSpace","maxHeight","AppBar","position","backgroundColor","AppBarContent","display","alignItems","minHeight","typo","fontFamily","fontSize","fontWeight","fontStretch","fontStyle","lineHeight","color","typoTotal","marginLeft","Button","ElevationScroll","children","trigger","useScrollTrigger","disableHysteresis","threshold","undefined","React","cloneElement","Application","classes","useHistory","Toolbar","variant","onClick","Grid","container","lg","Fragment","CssBaseline","Typography","formControl","spacing","minWidth","selectEmpty","Form","justifyContent","FormContent","flexDirection","TextInput","borderBottom","boxShadow","textTransform","GetAppointment","useState","speciality","setSpeciality","setName","days","setDays","ailment","setAilment","doctorSpecialities","setDoctorSpecialities","doctorName","setDoctorName","doctorDays","setDoctorDays","useEffect","a","fetch","json","responseData","Object","keys","sendingRequest","entries","map","mainitem","sendingRequest2","sendingRequest3","handleSubmit","method","body","JSON","stringify","status","specialization","day","success","Error","FormControl","InputLabel","Select","labelId","event","MenuItem","filter","filteredvalue","TextField","label","RegisterDoctor","address","reg_num","hospital_name","mon","tues","wed","thrus","fri","sat","sun","registerDoctor","DoctorLogin","loginDoctor","DoctorVerify","verifyDoctor","flexGrow","menuButton","marginRight","title","Navbar","align","textAlign","Navbar2","onLogoutClick","rest","render","total","statewise","get","overflowX","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","key","textDecoration","confirmed","cChanges","active","aChanges","recovered","rChanges","deaths","dChanges","marginBottom","jwtToken","currentTime","Date","now","exp","location","href","App","PrivateNavbar","exact","path","Map","PatientRegister","PatientDashboard","PatientGetAppointment","DoctorRegister","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9a5fdd01.chunk.js","sourcesContent":["import axios from \"axios\";\nconst setAuthToken = token => {\n  if (token) {\n    axios.defaults.headers.common[\"Authorization\"] = token;\n  } else {\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\nexport default setAuthToken;\n","import axios from \"axios\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\n\nimport { GET_ERRORS, SET_CURRENT_USER, USER_LOADING } from \"./types\";\n\nexport const registerPatient = (userData, history) => dispatch => {\n  axios\n    .post(\"/patient/register\", userData)\n    .then(res => history.push(\"/patient/verify\"))\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\nexport const verifyPatient = (userData, history) => dispatch => {\n  axios\n    .post(\"/patient/verify\", userData)\n    .then(res => history.push(\"/patient/login\"))\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\nexport const loginPatient = userData => dispatch => {\n  axios\n    .post(\"/patient/login\", userData)\n    .then(res => {\n      const { token } = res.data;\n      localStorage.setItem(\"jwtToken\", token);\n      // Set token to Auth header\n      setAuthToken(token);\n      // Decode token to get user data\n      const decoded = jwt_decode(token);\n      // Set current user\n      dispatch(setCurrentUser(decoded));\n    })\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n\nexport const registerDoctor = (userData, history) => dispatch => {\n  axios\n    .post(\"/doctor/register\", userData)\n    .then(res => history.push(\"/doctor/verify\"))\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\nexport const verifyDoctor = (userData, history) => dispatch => {\n  axios\n    .post(\"/doctor/verify\", userData)\n    .then(res => history.push(\"/doctor/login\"))\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\nexport const loginDoctor = userData => dispatch => {\n  axios\n    .post(\"/doctor/login\", userData)\n    .then(res => {\n      const { token } = res.data;\n      localStorage.setItem(\"jwtToken\", token);\n      // Set token to Auth header\n      setAuthToken(token);\n      // Decode token to get user data\n      const decoded = jwt_decode(token);\n      // Set current user\n      dispatch(setCurrentUser(decoded));\n    })\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n\n\n\n\n\n\n\n// Set logged in user\nexport const setCurrentUser = decoded => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  };\n};\n\n\nexport const setUserLoading = () => {\n  return {\n    type: USER_LOADING\n  };\n};\n\nexport const logoutUser = () => dispatch => {\n  localStorage.removeItem(\"jwtToken\");\n  setAuthToken(false);\n  dispatch(setCurrentUser({}));\n};\n","export const GET_ERRORS = \"GET_ERRORS\";\nexport const USER_LOADING = \"USER_LOADING\";\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\n","import { SET_CURRENT_USER, USER_LOADING  } from \"../actions/types\";\n\nconst isEmpty = require(\"is-empty\");\n\nconst initialState = {\n  isAuthenticated: false,\n  user: {},\n  loading: false\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        isAuthenticated: !isEmpty(action.payload),\n        user: action.payload\n      };\n    case USER_LOADING:\n      return {\n        ...state,\n        loading: true\n      };\n    default:\n      return state;\n  }\n}","import { GET_ERRORS } from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport authReducer from \"./authReducers\";\nimport errorReducer from \"./errorReducer\";\n\nexport default combineReducers({\n  auth: authReducer,\n  errors: errorReducer\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middleware),\n    (window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\n      window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__()) ||\n      compose\n  )\n);\n\nexport default store;\n","import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { registerPatient } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\n\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\n\n\n\nclass RegisterPatient extends Component {\n  constructor() {\n    super();\n    this.state = {\n     name: \"\",\n     email: \"\",\n     password: \"\",\n     password2: \"\",\n     phone: \"\",\n     errors: {}\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/patient/dashboard\");\n    }\n  }\n  \n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n    console.log(this.state);\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    const newUser = {\n      name: this.state.name,\n      email: this.state.email,\n      password: this.state.password,\n      password2: this.state.password2,\n      phone: this.state.phone\n    };\n    console.log(newUser);\n    this.props.registerPatient(newUser, this.props.history);\n  };\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div>\n        <br></br>\n        \n      <div class=\"container\">\n          <div class=\"row\">\n          <div class=\"col-md-6 col-sm-12 my\">\n              </div>\n              <div class=\"col-md-6 col-sm-12\">\n              <Box width =\"100%\" height=\"100%\"  item xs={12} sm={8} md={5} component={Paper} elevation={6} className=\"card\" >\n                <div class=\"conainer\">\n              <div >\n              <h4 style={{ margin: \"50px 50px \"  }}>\n              <b>Patient Sign In</b>\n              </h4>\n              </div>\n                <form noValidate onSubmit={this.onSubmit} style={{ margin: \"40px 40px\"  }}>\n                  <div className=\"input-field col s12\">\n                  <input\n                  onChange={this.onChange}\n                  value={this.state.name}\n                  error={errors.name}\n                  id=\"name\"\n                  type=\"text\"\n                  className={classnames(\"\", {\n                    invalid: errors.name\n                  })}\n                />\n                <label htmlFor=\"name\">Name</label>\n                <span className=\"red-text\">{errors.name}</span>\n                  </div>\n\n                  <div className=\"input-field col s12\">\n                  <input\n                  onChange={this.onChange}\n                  value={this.state.email}\n                  error={errors.email}\n                  id=\"email\"\n                  type=\"email\"\n                  className={classnames(\"\", {\n                    invalid: errors.email\n                  })}\n                />\n                <label htmlFor=\"email\">Email</label>\n                <span className=\"red-text\">{errors.email}</span>\n                </div>\n\n                \n                <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.phone}\n                  error={errors.phone}\n                  id=\"phone\"\n                  type=\"text\"\n                  className={classnames(\"\", {\n                    invalid: errors.phone\n                  })}\n                />\n                <label htmlFor=\"phone\">Phone</label>\n                <span className=\"red-text\">{errors.phone}</span>\n                  </div>\n\n\n                <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.password}\n                  error={errors.password}\n                  id=\"password\"\n                  type=\"password\"\n                  className={classnames(\"\", {\n                    invalid: errors.password\n                  })}\n                />\n                <label htmlFor=\"password\">Password</label>\n                <span className=\"red-text\">{errors.password}</span>\n                </div>\n\n                <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.password2}\n                  error={errors.password2}\n                  id=\"password2\"\n                  type=\"password\"\n                  className={classnames(\"\", {\n                    invalid: errors.password2\n                  })}\n                />\n                <label htmlFor=\"password2\">Confirm Password</label>\n                <span className=\"red-text\">{errors.password2}</span>\n              </div>\n\n\n                <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                  <button\n                    style={{\n                      width: \"150px\",\n                      borderRadius: \"3px\",\n                      letterSpacing: \"1.5px\",\n                      marginTop: \"1rem\"\n                    }}\n                    type=\"submit\"\n                    className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n                  >\n                    Sign In\n                  </button>\n                  <p className=\"grey-text text-darken-1 mt-2 mb-2\">\n                  Already have an account? <Link to=\"/patient/login\">Log in</Link>\n                </p>\n                </div>\n\n              </form>\n              </div>\n          \n              </Box>\n              </div>\n              \n            </div>\n      </div>   \n      </div>\n\n    );\n  }\n}\n\nRegisterPatient.propTypes = {\n  registerPatient: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { registerPatient }\n)(withRouter(RegisterPatient));","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { loginPatient } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\n\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\n\nclass PatientLogin extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: \"\",\n      password: \"\",\n      errors: {}\n    };\n  }\n\n  componentDidMount() {\n    // If logged in and user navigates to Login page, should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/patient/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.auth.isAuthenticated) {\n      this.props.history.push(\"/patient/dashboard\");\n    }\n\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    const userData = {\n      email: this.state.email,\n      password: this.state.password\n    };\n\n    this.props.loginPatient(userData);\n  };\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div className=\"container\">\n        <div style={{ marginTop: \"4rem\" }} className=\"row\">\n        <div className=\"col-lg-6 offset-s2 \">\n          </div>\n          <div className=\"col-lg-5 offset-s2\">\n          <Box width =\"100%\" height=\"100%\"   item xs={12} sm={8} md={5} component={Paper} elevation={6} className=\"card\" >\n            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n            <br/> \n              <br/> \n              <h4>\n                <b>Log In</b>\n              </h4>\n              <p className=\"grey-text text-darken-1\">\n                Don't have an account? <Link to=\"/patient/register\">Register</Link>\n              </p>\n            </div>\n            <form noValidate onSubmit={this.onSubmit}>\n            <br/> \n            <br/> \n            <br/> \n            <br/> \n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.email}\n                  error={errors.email}\n                  id=\"email\"\n                  type=\"email\"\n                  className={classnames(\"\", {\n                    invalid: errors.email || errors.emailnotfound\n                  })}\n                />\n                <label htmlFor=\"email\">Email</label>\n                <span className=\"red-text\">\n                  {errors.email}\n                  {errors.emailnotfound}\n                </span>\n              </div>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.password}\n                  error={errors.password}\n                  id=\"password\"\n                  type=\"password\"\n                  className={classnames(\"\", {\n                    invalid: errors.password || errors.passwordincorrect\n                  })}\n                />\n                <label htmlFor=\"password\">Password</label>\n                <span className=\"red-text\">\n                  {errors.password}\n                  {errors.passwordincorrect}\n                </span>\n              </div>\n              <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                <button\n                  style={{\n                    width: \"150px\",\n                    borderRadius: \"3px\",\n                    letterSpacing: \"1.5px\",\n                    marginTop: \"1rem\"\n                  }}\n                  type=\"submit\"\n                  className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n                >\n                  Login\n                </button>\n                <br/> \n            <br/> \n              </div>\n            </form>\n            </Box>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nPatientLogin.propTypes = {\n  loginPatient: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { loginPatient }\n)(PatientLogin);\n","import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { verifyPatient } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\n\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\n\nclass PatientVerify extends Component {\n  constructor() {\n    super();\n    this.state = {\n      otp: \"\",\n      email: \"\",\n      errors: {}\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/patient/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    const newUser = {\n      otp: this.state.otp,\n      email: this.state.email,\n    };\n\n    this.props.verifyPatient(newUser, this.props.history);\n  };\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n        <div className=\"col-lg-6 offset-s2\">\n          </div>\n          <div className=\"col-lg-5 offset-s2 mt -4\">\n          <Box width =\"100%\" height=\"100%\"   item xs={12} sm={8} md={5} component={Paper} elevation={6} className=\"card\" >\n\n            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n            <br/ >\n              <h4>\n                <b>Verify </b> \n              </h4>\n              <br/ >\n              <p className=\"grey-text text-darken-1\">\n                Already Verfied? <Link to=\"/login\">Log in</Link>\n              </p>\n              <p className=\"grey-text text-darken-1\">\n                Don't have an account? <Link to=\"/register\">Register</Link>\n              </p>\n            </div>\n            <form noValidate onSubmit={this.onSubmit}>\n            <br/ >\n            <br/ >\n            <br/ >\n            <br/ >\n            <br/ >\n            <br/ >\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.email}\n                  error={errors.email}\n                  id=\"email\"\n                  type=\"email\"\n                  className={classnames(\"\", {\n                    invalid: errors.email\n                  })}\n                />\n                <label htmlFor=\"email\">Email</label>\n                <span className=\"red-text\">{errors.email}</span>\n              </div>\n              \n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.otp}\n                  error={errors.otp}\n                  id=\"otp\"\n                  type=\"text\"\n                  className={classnames(\"\", {\n                    invalid: errors.otp\n                  })}\n                />\n                <label htmlFor=\"otp\">Enter OTP</label>\n                <span className=\"red-text\">{errors.otp}</span>\n              </div>\n              \n              <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                <button\n                  style={{\n                    width: \"150px\",\n                    borderRadius: \"3px\",\n                    letterSpacing: \"1.5px\",\n                    marginTop: \"1rem\"\n                  }}\n                  type=\"submit\"\n                  className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n                >\n                  Verify\n                </button>\n                <br/ >\n                <br/ >\n                <br/ >\n              </div>\n            </form>\n            </Box>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nPatientVerify.propTypes = {\n  verifyPatient: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { verifyPatient }\n)(withRouter(PatientVerify));\n","import React,{useState,useEffect} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\n\n\nimport {useHistory} from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n    //   backgroundColor: 'var(--secondary-opacity-0)',\n    //   display: 'flex'\n    },\n    main: {\n        // backgroundColor: 'red',\n        // width: 2021,\n        // width: '100vw'\n        // overflow: 'auto',\n        whiteSpace: 'nowrap',\n        maxHeight: 650,\n        height: 618\n    },\n    AppBar: {\n      position: \"relative\",\n      backgroundColor: '#f7f7f7',\n      height: 55,\n    },\n    AppBarContent: {\n      display: 'flex',\n      alignItems: 'center',\n      height: 55,\n      minHeight: 55,\n    },  \n    typo: {\n      // marginTop: -10,\n      // width: 100,\n      // height: 23,\n      fontFamily: 'Poppins',\n      fontSize: 16,\n      fontWeight: 'normal',\n      fontStretch: 'normal',\n      fontStyle: 'normal',\n      lineHeight: 'normal',\n      letterSpacing: 'normal',\n      color: '#3a3737'\n    },\n    typoTotal: {\n      // marginTop: 2,\n      marginLeft: 5,\n      // marginTop: -10,\n      // width: 18,\n      height: 20,\n      fontFamily: 'Poppins',\n      fontSize: 14,\n      fontWeight: 'bold',\n      fontStretch: 'normal',\n      fontStyle: 'normal',\n      lineHeight: 'normal',\n      letterSpacing: 'normal',\n      color: '#9999a8',\n    },\n    Button: {\n        // padding: 100\n        margin: 20,\n        backgroundColor: '#008000'\n        // backgroundColor: '#ffffff'\n    }\n  }));\n\nfunction ElevationScroll(props) {\n    const { children, window } = props;\n    const trigger = useScrollTrigger({\n      disableHysteresis: true,\n      threshold: 0,\n      target: window ? window() : undefined,\n    });\n  \n    return React.cloneElement(children, {\n      elevation: trigger ? 4 : 0,\n    });\n  }\n\n  ElevationScroll.propTypes = {\n    children: PropTypes.element.isRequired,\n    window: PropTypes.func,\n  };\n\nconst Application = (props) => {\n    const classes = useStyles()\n    const history = useHistory();\n    \n\n    return (\n      \n        <div className={classes.root}>\n                <Toolbar/>\n                <Button variant=\"contained\" className={classes.Button} onClick={()=>{history.push('/patient/getAppointment')}}>\n                Get Appointment\n                </Button>\n                <Grid container className={classes.main}>\n                    <Grid item xs={12} lg={4} >\n                      <React.Fragment>\n                        <CssBaseline />\n                        <ElevationScroll {...props}>\n                          <AppBar className={classes.AppBar}>\n                            <Toolbar className={classes.AppBarContent}>\n                              <Typography variant=\"h6\" className={classes.typo}>Under Consideration</Typography>\n                              <Typography variant=\"h6\" className={classes.typoTotal}>{0}</Typography>\n                            </Toolbar>\n                          </AppBar>\n                        </ElevationScroll>\n                        {/* <Container>\n                          <Box my={2} overflow=\"auto\">\n                            {data.section1.map(item => {\n                              if(interviewNameSubmit)\n                              {\n                                if(item.name.toLowerCase().includes(interviewNameSubmit.toLowerCase()))\n                                return <ApplicationCard id={item.id} name={item.name} location={item.location} owner={item.owner} created={item.created} mobile={item.mobile} interview={item.interview} candidates={item.candidates} MenuItem={[\"Schedule interview\",\"Call again\",\"Reject\"]}/> \n                              } else\n                                return <ApplicationCard id={item.id} name={item.name} location={item.location} owner={item.owner} created={item.created} mobile={item.mobile} interview={item.interview} candidates={item.candidates} MenuItem={[\"Schedule interview\",\"Call again\",\"Reject\"]}/> \n                            })}                                                           \n                          </Box>\n                        </Container> */}\n                      </React.Fragment>\n                    </Grid>\n\n                    <Grid item xs={12} lg={4} >\n                      <React.Fragment>\n                        <CssBaseline />\n                        <ElevationScroll {...props}>\n                          <AppBar className={classes.AppBar}>\n                            <Toolbar className={classes.AppBarContent}>\n                              <Typography variant=\"h6\" className={classes.typo}>Accepted</Typography>\n                              <Typography variant=\"h6\" className={classes.typoTotal}>{0}</Typography>\n                            </Toolbar>\n                          </AppBar>\n                        </ElevationScroll>\n                      </React.Fragment>\n                    </Grid>\n                    <Grid item xs={12} lg={4} >\n                      <React.Fragment>\n                        <CssBaseline />\n                        <ElevationScroll {...props}>\n                          <AppBar className={classes.AppBar}>\n                            <Toolbar className={classes.AppBarContent}>\n                              <Typography variant=\"h6\" className={classes.typo}>Rejected</Typography>\n                              <Typography variant=\"h6\" className={classes.typoTotal}>{0}</Typography>\n                            </Toolbar>\n                          </AppBar>\n                        </ElevationScroll>\n                      </React.Fragment>\n                    </Grid>\n\n                    \n                </Grid>\n        </div>\n    )\n}\n\nexport  default Application;","import React, {useState,useEffect} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport {useHistory} from 'react-router-dom';\n\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n    width: 700,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  Form: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n  },\n  FormContent: {\n      height: 500,\n      marginTop: 30,\n      display: 'flex',\n      flexDirection: 'column',\n    //   alignItems: spaceEvenly,\n    justifyContent: \"space-evenly\",\n    alignItems: \"space-evenly\"\n\n  },\n  TextInput: {\n    //   width: 300,\n    //   padding: 10,\n      margin: 10,\n      borderBottom: 'none',\n      boxShadow: 'none',\n      textTransform: 'none',\n  },\n  Button: {\n    // padding: 100\n    margin: 10,\n    backgroundColor: '#008000'\n    // backgroundColor: '#ffffff'\n  }\n}));\n\n\n\nconst GetAppointment = () => {\n    const classes = useStyles();\n    const history = useHistory();\n  const [speciality, setSpeciality] = React.useState('');\n  const [name, setName] = React.useState('');\n  const [days, setDays] = React.useState('');\n  const [ailment, setAilment] = React.useState('');\n\n  const [doctorSpecialities, setDoctorSpecialities] = useState([]);\n  const [doctorName, setDoctorName] = useState([]);\n  const [doctorDays, setDoctorDays] = useState([]);\n\n  useEffect(() => {\n    \n    const sendingRequest = async () => {\n      try{\n        const response = await fetch(`http://localhost:3000/doctor/getSpecialization`, {\n          // headers: {\n            // \"Authorization\": localStorage.getItem(\"accessToken\")\n          // }\n        });\n        const responseData = await response.json();\n        // console.log(responseData)\n        setDoctorSpecialities(Object.keys(responseData.response))\n      } catch(err){\n        console.log(err);\n      }\n    }\n    sendingRequest();\n\n    const sendingRequest2 = async () => {\n      try{\n        const response = await fetch(`http://localhost:3000/doctor/getSpecialization`, {\n          // headers: {\n            // \"Authorization\": localStorage.getItem(\"accessToken\")\n          // }\n        });\n        const responseData = await response.json();\n        // console.log(responseData)\n        Object.entries(responseData.response).map(mainitem => {\n\n          setDoctorName( item => {\n            return (\n              [\n                ...item, {\n                  id: mainitem[0],\n                  value: mainitem[1]\n                }\n              ]\n            )\n          } )\n          \n        })\n        // setDoctorName(responseData.response);\n      } catch(err){\n        console.log(err);\n      }\n    }\n    sendingRequest2();\n\n    const sendingRequest3 = async () => {\n      try{\n        const response = await fetch(`http://localhost:3000/doctor/getDays`, {\n          // headers: {\n            // \"Authorization\": localStorage.getItem(\"accessToken\")\n          // }\n        });\n        const responseData = await response.json();\n        console.log(\"f\",responseData)\n        Object.entries(responseData.response).map(mainitem => {\n\n          setDoctorDays( item => {\n            return (\n              [\n                ...item, {\n                  id: mainitem[0],\n                  value: mainitem[1]\n                }\n              ]\n            )\n          } )\n          \n        })\n        // setDoctorDays(responseData.doctorDays);\n      } catch(err){\n        console.log(err);\n      }\n    }\n    sendingRequest3();\n\n\n\n  }, [])\n\n  // useEffect(() => {\n  //   console.log(doctorDays)\n  // }, [doctorDays])\n\n\n  const handleChange = (event) => {\n    setSpeciality(event.target.value);\n  };\n  const handleChange2 = (event) => {\n    setName(event.target.value);\n  };\n  const handleChange3 = (event) => {\n    setDays(event.target.value);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try{\n      const response = await fetch(`http://localhost:3000/patient/postAppointment`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          // \"Authorization\": localStorage.getItem(\"accessToken\")\n        },\n        body: JSON.stringify({\n          name: name,\n          status: \"Under Consideration\",\n          specialization: speciality,\n          day:days,\n          ailment:ailment\n        })\n      });\n      const responseData = await response.json();\n      console.log(\"a\",responseData);\n      if(responseData.success===false)\n      throw Error\n      history.push('/patient/dashboard');\n    } catch(err){\n      console.log(err);\n    }\n    // setDays(event.target.value);\n  };\n\n    return (\n        <React.Fragment>\n        <Toolbar/>\n        <Grid container>\n            <Grid item xs={12} className={classes.Form}>\n            <form onSubmit={handleSubmit}>\n            <div className={classes.FormContent}>\n            <FormControl className={classes.formControl}>\n                <InputLabel id=\"demo-simple-select-label\">Doctors Specialties</InputLabel>\n                <Select\n                labelId=\"demo-simple-select-label\"\n                id=\"demo-simple-select\"\n                value={speciality}\n                onChange={handleChange}\n                >\n                { doctorSpecialities.map( (item) => {\n                  return (\n                    <MenuItem value={item}>{item}</MenuItem>    \n                  )\n                } )}\n                </Select>\n            </FormControl>\n            <FormControl className={classes.formControl}>\n                <InputLabel id=\"demo-simple-select-label\">Doctors Name</InputLabel>\n                <Select\n                labelId=\"demo-simple-select-label\"\n                id=\"demo-simple-select\"\n                value={name}\n                onChange={handleChange2}\n                >\n                {\n                  speciality && doctorName.filter(item => item.id === speciality).map(filteredvalue => { return filteredvalue.value.map( item => {return <MenuItem value={item}>{item}</MenuItem>} ) })\n                }\n                </Select>\n            </FormControl>\n            <FormControl className={classes.formControl}>\n                <InputLabel id=\"demo-simple-select-label\">Doctors Days</InputLabel>\n                <Select\n                labelId=\"demo-simple-select-label\"\n                id=\"demo-simple-select\"\n                value={days}\n                onChange={handleChange3}\n                >\n                {\n                  name && doctorDays.filter(item => item.id === name).map(filteredvalue => { return filteredvalue.value.map( item => {return <MenuItem value={item}>{item}</MenuItem>} ) })\n                }\n                </Select>\n            </FormControl>\n            <TextField id=\"standard-basic\" label=\"Ailment\" className={classes.TextInput} onChange={(e)=>{setAilment(e.target.value)}} />\n            <Button variant=\"contained\" className={classes.Button} type=\"submit\" >\n                Get Appointment\n            </Button>\n            </div>\n            </form>\n            </Grid>\n        </Grid>\n        </React.Fragment>\n    )\n}\n\nexport default GetAppointment;","import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { registerDoctor } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\n\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\n\n\n\nclass RegisterDoctor extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name:\"\",\n      email: \"\",\n      address:\"\",\n      reg_num:\"\",\n      phone:\"\",\n      specialization: \"\",\n      password: \"\",\n      password2: \"\",\n      errors: {},\n      hospital_name: \"\",\n      mon: true,\n      tues: true,\n      wed: true,\n      thrus: true,\n      fri: true,\n      sat: true,\n      sun: true,\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.auth.isAuthenticated ) {\n      this.props.history.push(\"/doctor/dashboard\");\n    }\n  }\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n    console.log(this.state);\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    const newUser = {\n      name: this.state.name,\n      email: this.state.email,\n      address:this.state.address,\n      phone:this.state.phone,\n      reg_num: this.state.reg_num,\n      hospital_name: this.state.hospital_name,\n      specialization:this.state.specialization,\n      password: this.state.password,\n      password2: this.state.password2,\n      mon: this.state.mon,\n      tues: this.state.tues,\n      wed: this.state.wed,\n      thrus: this.state.thrus,\n      fri: this.state.fri,\n      sat: this.state.sat,\n      sun: this.state.sun,\n    };\n    console.log(newUser);\n    this.props.registerDoctor(newUser, this.props.history);\n  };\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div >\n        <div class=\"container\">\n          <div class=\"row\">\n          <div class=\"col-md-6 col-sm-12\">  \n          </div>\n            <div class=\"col-md-6 col-sm-12\">  \n              <Box width =\"100%\" height=\"100%\"  item xs={12} sm={8} md={5} component={Paper} elevation={6} className=\"card\" >\n                <div class=\"conainer\">\n                <div >\n                <h4 style={{ margin: \"50px 50px \"  }}>\n              <b>Register as Doctor</b>\n              </h4>\n              </div>\n                <form noValidate onSubmit={this.onSubmit} style={{ margin: \"40px 40px\"  }}>\n                 \n                <div className=\"input-field col s12\">\n                <input\n                onChange={this.onChange}\n                value={this.state.name}\n                error={errors.name}\n                id=\"name\"\n                type=\"text\"\n                className={classnames(\"\", {\n                  invalid: errors.name\n                })}\n              />\n              <label htmlFor=\"name\">Name</label>\n              <span className=\"red-text\">{errors.name}</span>\n                </div>\n\n                  <div className=\"input-field col s12\">\n                  <input\n                  onChange={this.onChange}\n                  value={this.state.email}\n                  error={errors.email}\n                  id=\"email\"\n                  type=\"email\"\n                  className={classnames(\"\", {\n                    invalid: errors.email\n                  })}\n                />\n                <label htmlFor=\"email\">Email</label>\n                <span className=\"red-text\">{errors.email}</span>\n                </div>\n\n                <div className=\"input-field col s12\">\n                  <input\n                  onChange={this.onChange}\n                  value={this.state.address}\n                  error={errors.address}\n                  id=\"address\"\n                  type=\"text\"\n                  className={classnames(\"\", {\n                    invalid: errors.address\n                  })}\n                />\n                <label htmlFor=\"adress\">Address</label>\n                <span className=\"red-text\">{errors.address}</span>\n                </div>\n\n                \n\n                <div className=\"input-field col s12\">\n                  <input\n                  onChange={this.onChange}\n                  value={this.state.reg_num}\n                  error={errors.reg_num}\n                  id=\"reg_num\"\n                  type=\"text\"\n                  className={classnames(\"\", {\n                    invalid: errors.reg_num\n                  })}\n                />\n                <label htmlFor=\"reg_num\">Registration Number</label>\n                <span className=\"red-text\">{errors.reg_num}</span>\n                </div>\n\n\n                <div className=\"input-field col s12\">\n                  <input\n                  onChange={this.onChange}\n                  value={this.state.hospital_name}\n                  error={errors.hospital_name}\n                  id=\"hospital_name\"\n                  type=\"text\"\n                  className={classnames(\"\", {\n                    invalid: errors.hospital_name\n                  })}\n                />\n                <label htmlFor=\"hospital_name\">Hospital Name</label>\n                <span className=\"red-text\">{errors.hospital_name}</span>\n                </div>\n\n\n\n                \n                <div className=\"input-field col s12\">\n                  <input\n                  onChange={this.onChange}\n                  value={this.state.specialization}\n                  error={errors.specialization}\n                  id=\"specialization\"\n                  type=\"text\"\n                  className={classnames(\"\", {\n                    invalid: errors.specialization\n                  })}\n                />\n                <label htmlFor=\"specialization\">specialization</label>\n                <span className=\"red-text\">{errors.specialization}</span>\n                </div>\n\n\n                \n\n                <div className=\"input-field col s12\">\n                  <input\n                  onChange={this.onChange}\n                  value={this.state.phone}\n                  error={errors.phone}\n                  id=\"phone\"\n                  type=\"text\"\n                  className={classnames(\"\", {\n                    invalid: errors.phone\n                  })}\n                />\n                <label htmlFor=\"phone\">Contact Number</label>\n                <span className=\"red-text\">{errors.phone}</span>\n                </div>\n\n\n\n                <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.password}\n                  error={errors.password}\n                  id=\"password\"\n                  type=\"password\"\n                  className={classnames(\"\", {\n                    invalid: errors.password\n                  })}\n                />\n                <label htmlFor=\"password\">Password</label>\n                <span className=\"red-text\">{errors.password}</span>\n                </div>\n\n                <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.password2}\n                  error={errors.password2}\n                  id=\"password2\"\n                  type=\"password\"\n                  className={classnames(\"\", {\n                    invalid: errors.password2\n                  })}\n                />\n                <label htmlFor=\"password2\">Confirm Password</label>\n                <span className=\"red-text\">{errors.password2}</span>\n              </div>\n\n\n                <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                  <button\n                    style={{\n                      width: \"150px\",\n                      borderRadius: \"3px\",\n                      letterSpacing: \"1.5px\",\n                      marginTop: \"1rem\"\n                    }}\n                    type=\"submit\"\n                    className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n                  >\n                  Register\n                  </button>\n                  <p className=\"grey-text text-darken-1 mt-2 mb-2\">\n                  Already have an account? <Link to=\"/doctor/login\"> Login</Link>\n                </p>\n                </div>\n\n              </form>\n              </div>\n          \n              </Box>\n              </div>\n              \n            </div>\n      </div>   \n      </div>\n\n\n    );\n  }\n}\n\nRegisterDoctor.propTypes = {\n  registerDoctor: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { registerDoctor }\n)(withRouter(RegisterDoctor));","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { loginDoctor } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\n\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\n\nclass DoctorLogin extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: \"\",\n      password: \"\",\n      errors: {}\n    };\n  }\n\n  componentDidMount() {\n    // If logged in and user navigates to Login page, should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/doctor/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.auth.isAuthenticated) {\n      this.props.history.push(\"/doctor/dashboard\");\n    }\n\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    const userData = {\n      email: this.state.email,\n      password: this.state.password\n    };\n\n    this.props.loginDoctor(userData);\n  };\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n\n      <div className=\"container\">\n        <div style={{ marginTop: \"4rem\" }} className=\"row\">\n        <div className=\"col-lg-6 offset-s2 \">\n          </div>\n          <div className=\"col-lg-5 offset-s2 \">\n          <Box width =\"100%\" height=\"100%\"   item xs={12} sm={8} md={5} component={Paper} elevation={6} className=\"card\" >\n            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n              <br/> \n              <br/> \n              <h4>\n                <b>Log In</b>\n              </h4>\n              <p className=\"grey-text text-darken-1 mb-3 mt-3\">\n                Don't have an account? <Link to=\"/doctor/register\">Register</Link>\n              </p>\n              \n            </div>\n            <br/>\n             \n\n            <form noValidate onSubmit={this.onSubmit}>\n            <br/> \n            <br/> \n            <br/> \n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.email}\n                  error={errors.email}\n                  id=\"email\"\n                  type=\"email\"\n                  className={classnames(\"\", {\n                    invalid: errors.email || errors.emailnotfound\n                  })}\n                />\n                <label htmlFor=\"email\">Email</label>\n                <span className=\"red-text\">\n                  {errors.email}\n                  {errors.emailnotfound}\n                </span>\n              </div>\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.password}\n                  error={errors.password}\n                  id=\"password\"\n                  type=\"password\"\n                  className={classnames(\"\", {\n                    invalid: errors.password || errors.passwordincorrect\n                  })}\n                />\n                <label htmlFor=\"password\">Password</label>\n                <span className=\"red-text\">\n                  {errors.password}\n                  {errors.passwordincorrect}\n                </span>\n              </div>\n              <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                <button\n                  style={{\n                    width: \"150px\",\n                    borderRadius: \"3px\",\n                    letterSpacing: \"1.5px\",\n                    marginTop: \"1rem\"\n                  }}\n                  type=\"submit\"\n                  className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n                >\n                  Login\n                </button>\n                <br/> \n                <br/> \n              </div>\n            </form>\n            </Box>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nDoctorLogin.propTypes = {\n  loginDoctor: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { loginDoctor }\n)(DoctorLogin);\n","import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { verifyDoctor } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\n\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\n\nclass DoctorVerify extends Component {\n  constructor() {\n    super();\n    this.state = {\n      otp: \"\",\n      email: \"\",\n      errors: {}\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/doctor/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    const newUser = {\n      otp: this.state.otp,\n      email: this.state.email,\n    };\n\n    this.props.verifyDoctor(newUser, this.props.history);\n  };\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n        <div className=\"col-lg-6 offset-s2\">\n          </div>\n          <div className=\"col-lg-5 offset-s2 mt -4\">\n          <Box width =\"100%\" height=\"100%\"   item xs={12} sm={8} md={5} component={Paper} elevation={6} className=\"card\" >\n            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n              <br/ >\n              \n              <h4>\n                <b>Verify </b> \n              </h4>\n              <br/ >\n              \n              <p className=\"grey-text text-darken-1\">\n                Already Verfied? <Link to=\"/doctor/login\">Log in</Link>\n              </p>\n              <p className=\"grey-text text-darken-1\">\n                Don't have an account? <Link to=\"/doctor/register\">Register</Link>\n              </p>\n            </div>\n            <form  noValidate onSubmit={this.onSubmit}>\n            <br/ >\n              <br/ >\n              <br/ >\n              <br/ >\n              <br/ >\n              <br/ >\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.email}\n                  error={errors.email}\n                  id=\"email\"\n                  type=\"email\"\n                  className={classnames(\"\", {\n                    invalid: errors.email\n                  })}\n                />\n                <label htmlFor=\"email\">Email</label>\n                <span className=\"red-text\">{errors.email}</span>\n              </div>\n              \n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.otp}\n                  error={errors.otp}\n                  id=\"otp\"\n                  type=\"text\"\n                  className={classnames(\"\", {\n                    invalid: errors.otp\n                  })}\n                />\n                <label htmlFor=\"otp\">Enter OTP</label>\n                <span className=\"red-text\">{errors.otp}</span>\n              </div>\n              \n              <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                <button\n                  style={{\n                    width: \"150px\",\n                    borderRadius: \"3px\",\n                    letterSpacing: \"1.5px\",\n                    marginTop: \"1rem\"\n                  }}\n                  type=\"submit\"\n                  className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\n                >\n                  Verify\n                </button>\n                <br/ >\n              <br/ >\n              <br/ >\n              </div>\n            </form>\n            </Box>\n          </div>\n          \n        </div>\n      </div>\n    );\n  }\n}\n\nDoctorVerify.propTypes = {\n  verifyDoctor: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { verifyDoctor }\n)(withRouter(DoctorVerify));","import React from 'react';\nimport {Link} from \"react-router-dom\"; \nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nfunction Navbar() {\n  const classes = useStyles();\n  return (\n    <div className={classes.root} >\n       <AppBar position=\"static\" style={{backgroundColor:\"white\",width:\"100%\", align:\"left\"}}>\n        <Toolbar>\n            <Typography variant=\"h6\" className={classes.title} style={{textAlign:\"left\", fontFamily:'Roboto'}}>\n            <Link to =  '/'>\n            <Button style={{color:\"green\" , fontFamily:'Roboto', fontSize: \"20px\"}}> <b>  E Cure </b>  </Button>\n            </Link>\n          </Typography>\n          \n          <Link to =  '/patient/register'>\n          <Button style={{color:\"black\"}}>Patient Register</Button>\n          </Link>\n          <Link to =  '/patient/login'>\n          <Button style={{color:\"black\"}}> Patient Login </Button>\n          </Link>\n          <Link to =  '/doctor/register'>\n          <Button style={{color:\"black\"}}>Doctor Register</Button>\n          </Link>\n          <Link to =  '/doctor/login'>\n          <Button style={{color:\"black\"}}>Doctor Login </Button>\n          </Link>\n          \n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nexport default Navbar;","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../actions/authActions\";\nimport {Link} from \"react-router-dom\"; \nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nclass Navbar2 extends Component {\n  onLogoutClick = e => {\n    e.preventDefault();\n    this.props.logoutUser();\n    this.props.history.push(\"/\");\n  };\n\n  render() {\n    const { user } = this.props.auth;\n\n    return (\n\n      <div  >\n       <AppBar position=\"fixed\" style={{backgroundColor:\"white\" , width:\"100%\", align:\"left\"}}>\n        <Toolbar>\n        <Link to =  '/'>\n            <Typography variant=\"h6\"  style={{textAlign:\"left\", color: \"green\" , fontFamily:'Roboto'}}>\n              E Cure\n          </Typography>\n          </Link>\n          <Typography variant=\"h6\"  style={{marginLeft: \"auto\", color : \"black\" , fontFamily:'Roboto'}}>\n            Hey {user.name}  \n          </Typography>\n          \n          <button\n              style={{\n                width: \"150px\",\n                borderRadius: \"3px\",\n                letterSpacing: \"1.5px\",\n                marginRight: \"1rem\",\n                marginLeft: \"1rem\",\n                color: 'black'\n              }}\n              onClick={this.onLogoutClick}\n              class=\"btn btn-outline-secondary\">\n              Logout\n            </button>\n            </Toolbar>\n      </AppBar>\n      </div>\n    );\n  }\n}\n\nNavbar2.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(\n  mapStateToProps,\n  { logoutUser }\n)(Navbar2);\n","import React from \"react\";\nimport { Route} from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport Navbar2 from \"../navbar/navbar2\"\n\nconst PrivateRoute = ({ component: Component,auth, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      auth.isAuthenticated === true ? (\n        <Navbar2 {...props} />\n      ) : (\n        <Component {...props} />\n      )\n    }\n  />\n);\n\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React , {Component} from 'react';\nimport axios from 'axios';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n \nclass map extends Component {\n  constructor (props) {\n    super(props);\n    this.state = { \n        total: {},\n        statewise: []\n     };\n   }\n    componentDidMount(){\n        axios.get('https://api.covidindiatracker.com/state_data.json')\n        .then(res=> this.setState({statewise: res.data}));\n        axios.get('https://api.covidindiatracker.com/total.json')\n        .then(res=> this.setState({total: res.data}));\n    }\n\n  render () {\n\n    return (\n      <div class=\"row mx-auto\">\n         \n         <div class=\"col-lg-5 container col-sm-12 col-md-12 mx-auto\" style={{overflowX: \"auto\"}}>\n         <TableContainer>\n            <Table style={{fontFamily: \"Lato sans-serif\"}}>\n                <colgroup>\n                    <col width=\"30%\" />\n                    <col width=\"15%\" />\n                    <col width=\"15%\" />\n                    <col width=\"15%\" />\n                    <col width=\"15%\" />\n                </colgroup>\n                <TableHead>\n                    <TableRow style={{ height: \"10px\"}}>\n                        <TableCell style={{color: \"black\"}}> <b> State </b></TableCell>\n                        <TableCell   style={{color: \"red\"}} > <b>Confirmed </b> </TableCell>\n                        <TableCell style={{color: \"blue\"}}> <b> Existing</b> </TableCell>\n                        <TableCell  style={{color: \"green\"}} > <b>Recovered</b> </TableCell>\n                        <TableCell style={{color: \"grey\"}}> <b> Deaths </b> </TableCell>\n                    </TableRow>\n                </TableHead>\n                    <TableBody>\n                        {this.state.statewise.map((data) => (\n                            <TableRow key={data.name} style={{ height: \"10px\"}}>\n                            <TableCell  style={{color: \"black\" , textDecoration: \"bold\"}}>  {data.state} </TableCell>\n                        <TableCell  style={{color: \"red\"}}> {data.confirmed} <br/>  <b><i> {data.cChanges>=0 ?<span>+</span>: null}{data.cChanges}</i></b></TableCell>\n                            <TableCell style={{color: \"blue\"}} >  {data.active} <br/>  <b><i>   {data.aChanges>=0 ?<span>+</span>: null}{data.aChanges}</i></b> </TableCell>\n                            <TableCell  style={{color: \"green\"}}>  {data.recovered}  <br/>  <b><i>  {data.rChanges>=0 ?<span>+</span>: null}{data.rChanges}</i></b> </TableCell>\n                            <TableCell style={{color: \"grey\"}} >  {data.deaths}  <br/>  <b><i>  {data.dChanges>=0 ?<span>+</span>: null}{data.dChanges}</i></b> </TableCell>\n                            </TableRow>\n                        ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n         </div>\n         <div class=\"col-lg-5 container center mx-auto\">\n             <h1 style={{marginTop: \"50px\", fontFamily: \"roboto\"}} class=\"text-center\"> COVID Tracker</h1>  \n             <h2 style={{ fontFamily: \"roboto\"}}> India </h2> \n             <div class=\"card\" style={{margin: \"30px 50px\" }} >\n                    <h4 style={{ fontFamily: \"roboto\", marginTop:\"20px\" }}> Confirmed </h4>\n                    <h3 style={{color: \"red\" , fontFamily:\"roboto\"}}>\n                        {this.state.total.confirmed}\n                    </h3>\n                    <h6 style={{color: \"red\" , marginBottom:\"20px\" , fontFamily:\"roboto\"}}> <b>+{this.state.total.cChanges} </b>  </h6>\n             </div>\n             <div class=\"card\" style={{margin: \"30px 50px\"}}>\n             <h4 style={{ fontFamily: \"roboto\", marginTop:\"20px\" }}> Active </h4>\n             <h3 style={{color: \"blue\" , fontFamily:\"roboto\"}}>\n                        {this.state.total.active}\n                    </h3>\n                    <h6 style={{color: \"blue\" , marginBottom:\"20px\" , fontFamily:\"roboto\"}}> <b>+{this.state.total.aChanges} </b>  </h6>\n             </div>\n             <div class=\"card\" style={{margin: \"30px 50px\"}}>\n             <h4 style={{ fontFamily: \"roboto\", marginTop:\"20px\" }}> Recovered </h4>\n             <h3 style={{color: \"green\" ,  fontFamily:\"roboto\" }}>\n                        {this.state.total.recovered}\n                    </h3>\n                    <h6 style={{color: \"green\" , marginBottom:\"20px\" , fontFamily:\"roboto\"}}> <b>+{this.state.total.rChanges} </b> </h6>\n             </div>\n             <div class=\"card\" style={{margin: \"30px 50px\"}}>\n             <h4 style={{ fontFamily: \"roboto\", marginTop:\"20px\" }}> Deaths </h4>\n             <h3 style={{color: \"darkgrey\" ,  fontFamily:\"roboto\"}}>\n                        {this.state.total.deaths}\n                    </h3>\n                    <h6 style={{color: \"darkgrey\" , marginBottom:\"20px\" , fontFamily:\"roboto\"}}><b>+{this.state.total.dChanges} </b> </h6>\n             </div>\n         </div>\n         \n      </div>\n    );\n  }\n}\n\nexport default map;","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"./utils/setAuthToken\";\n\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nimport PatientRegister from \"./components/patientauth/register\";\nimport PatientLogin from \"./components/patientauth/login\";\nimport PatientVerify from './components/patientauth/verify';\nimport PatientDashboard from './components/patientdashboard/Dashboard';\nimport PatientGetAppointment from './components/patientdashboard/GetAppointment';\n\nimport DoctorRegister from \"./components/doctorauth/register\";\nimport DoctorLogin from \"./components/doctorauth/login\";\nimport DoctorVerify from './components/doctorauth/verify';\n\nimport Navbar from './components/navbar/navbar';\nimport PrivateNavbar from './components/privateroutes/PrivateNavbar'\n\nimport Map from './components/landing/map';\n\n\nif (localStorage.jwtToken) {\n\n  const token = localStorage.jwtToken;\n  setAuthToken(token);\n\n  const decoded = jwt_decode(token);\n\n  store.dispatch(setCurrentUser(decoded));\n\n  const currentTime = Date.now() / 1000; \n  if (decoded.exp < currentTime) {\n    store.dispatch(logoutUser());\n    window.location.href = \"./\";\n  }\n}\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\"> \n          <Switch>\n              <PrivateNavbar  component={Navbar} />\n            </Switch>  \n            <Route exact path=\"/\" component={Map} />\n            <Route exact path=\"/patient/register\" component={PatientRegister} />\n            <Route exact path=\"/patient/verify\" component={PatientVerify} />\n            <Route exact path=\"/patient/login\" component={PatientLogin} />\n            <Route exact path=\"/patient/dashboard\" component={PatientDashboard} />\n            <Route exact path=\"/patient/getAppointment\" component={PatientGetAppointment} />\n\n            <Route exact path=\"/doctor/register\" component={DoctorRegister} />\n            <Route exact path=\"/doctor/verify\" component={DoctorVerify} />\n            <Route exact path=\"/doctor/login\" component={DoctorLogin} />\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}